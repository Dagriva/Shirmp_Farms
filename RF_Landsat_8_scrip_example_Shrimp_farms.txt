var image = ee.ImageCollection('LANDSAT/LC08/C02/T1_TOA')
                                                          .filterBounds(ROI)
                                                          .filterDate('2021-05-01','2021-08-30')
                                                          

                                   
 Map.addLayer(image, {bands:['B5','B4','B3'], min: 0.025, max:.350}, "True Color Image")
var studyarea = image.mean().clip(ROI)
Map.addLayer(studyarea, {bands:['B5','B4','B3'], min: 0.0250, max:.250}, " Study Area")
//3) Create sample data for training data and validation data
var sample = agua.merge(suelo).merge(veg)
//Split sample data for training and validation
sample = sample.randomColumn();
var split = 0.8;  // Roughly 80% training, 20% testing.
var training = sample.filter(ee.Filter.lt('random', split));
var validationdata = sample.filter(ee.Filter.gte('random', split));
// 4) Trains random forest (RF) and classifies as vegetation, water, snow, and other
//Sample the pixel values for each training point
var bands = ['B1', 'B2', 'B3', 'B4', 'B5', 'B6', 'B7']
var training = studyarea.select(bands).sampleRegions({
  collection: training,
  properties: ['LC'],
  scale: 30
});
var classifier = ee.Classifier.smileRandomForest(100)
    .train({
      features: training,
      classProperty: 'LC',
      inputProperties: bands
    });
var classified = studyarea.classify(classifier);
var lcPalette = [
  '#0c89c4', // agua
  '#fff81b', // suelo
  '#21ff5b', // veg
];

Map.addLayer(classified, {palette: lcPalette, min: 1, max: 3}, 'classification');
// 5) Conduct the accuracy Accessment


var geometry = ee.Geometry.Rectangle([-116, 32,-104, 21.0]);



// Export.image.toDrive({
//   image: classified,
//   description: 'RF_05_09_2021',
//   scale: 30,
//   region: geometry,
//   maxPixels: 1e13
// });


//   maxPixels: 1e13
// });

