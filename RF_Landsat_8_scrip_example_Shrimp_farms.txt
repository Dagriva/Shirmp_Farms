/**
 * Function to mask clouds based on the pixel_qa band of Landsat 8 SR data.
 * @param {ee.Image} image input Landsat 8 SR image
 * @return {ee.Image} cloudmasked Landsat 8 image
 */
function maskL8sr(image) {
  // Bits 3 and 5 are cloud shadow and cloud, respectively.
  var cloudShadowBitMask = (1 << 3);
  var cloudsBitMask = (1 << 5);
  // Get the pixel QA band.
  var qa = image.select('pixel_qa');
  // Both flags should be set to zero, indicating clear conditions.
  var mask = qa.bitwiseAnd(cloudShadowBitMask).eq(0)
                 .and(qa.bitwiseAnd(cloudsBitMask).eq(0));
  return image.updateMask(mask);
}


//1) Establecer el area de estudio con un buffer   
//Map.addLayer(mgolfo, {color: 'White'}, 'mgolfo');

// 2) cargar las imagenes 
var image = ee.ImageCollection('LANDSAT/LC08/C01/T1_SR')
                                                          .filterBounds(ROI)
                                                          .filterDate('2021-05-01','2021-08-30')
                                                           .map(maskL8sr);

                                   
 Map.addLayer(image, {bands:['B5','B4','B3'], min: 0, max:4500}, "True Color Image")
var studyarea = image.mean().clip(ROI)
Map.addLayer(studyarea, {bands:['B5','B4','B3'], min: 250, max:2500}, " Study Area")
//3) Create sample data for training data and validation data
var sample = agua.merge(suelo).merge(veg)
//Split sample data for training and validation
sample = sample.randomColumn();

// 4) Trains random forest (RF) and classifies as water, soil, veg
//Sample the pixel values for each training point
var bands = ['B1', 'B2', 'B3', 'B4', 'B5', 'B6', 'B7']
var training = studyarea.select(bands).sampleRegions({
  collection: sample,
  properties: ['LC'],
  scale: 30
});
var classifier = ee.Classifier.smileRandomForest(100)
    .train({
      features: training,
      classProperty: 'LC',
      inputProperties: bands
    });
var classified = studyarea.classify(classifier);
var lcPalette = [
  '#0c89c4', // agua
  '#fff81b', // suelo
  '#21ff5b', // veg
];

Map.addLayer(classified, {palette: lcPalette, min: 1, max: 3}, 'classification');


var geometry = ee.Geometry.Rectangle([-116, 32,-104, 21.0]);



// Export.image.toDrive({
//   image: classified,
//   description: 'T1_SR_clas_RF_05_09_2021',
//   scale: 30,
//   region: geometry,
//   maxPixels: 1e13
// });

